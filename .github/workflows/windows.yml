name: Ordered Map CI - Windows

on:
  push:
    branches:
    - main
    - develop
    paths:
    - '**/*.c'
    - '**/*.cpp'
    - '**/*.h'
    - '**/*.hpp'
    - '**/CMakeLists.txt'
    - '**/Makefile'
  pull_request:
    branches:
    - main
    - develop
    paths:
    - '**/*.c'
    - '**/*.cpp'
    - '**/*.h'
    - '**/*.hpp'
    - '**/CMakeLists.txt'
    - '**/Makefile'

jobs:
  build:
    name: Build and Test (Windows)
    runs-on: windows-latest

    strategy:
      fail-fast: false
      matrix:
        include:
          [
            { cc: cl, cxx: cl, label: "MSVC" }, # MSVC Compiler
            { cc: gcc, cxx: g++, label: "MinGW GCC" } # MinGW GCC Compiler
          ]

    env:
      CC: ${{ matrix.cc }}
      CXX: ${{ matrix.cxx }}

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v4

    # Step: Set up MinGW for GCC support
    - name: Install MinGW (For GCC Support)
      if: matrix.cc == 'gcc'
      run: |
        choco install mingw -y
        echo "C:\ProgramData\chocolatey\bin" >> $env:GITHUB_PATH

    # Step: Configure Project (Use Visual Studio generator for MSVC)
    - name: Configure Project
      run: |
        mkdir build
        cd build
        if "${{ matrix.cc }}" == "cl" (
          cmake -G "Visual Studio 17 2022" -A x64 ..
        ) else (
          cmake -DCMAKE_C_COMPILER=${{ env.CC }} -DCMAKE_CXX_COMPILER=${{ env.CXX }} ..
        )

    # Step: Build Project
    - name: Build Project
      run: |
        cd build
        if "${{ matrix.cc }}" == "cl" (
          cmake --build . --config Debug --parallel 2
        ) else (
          cmake --build . --parallel 2
        )

    # Step: Run Tests
    - name: Run Tests
      run: |
        cd build
        ctest -C Debug --verbose
